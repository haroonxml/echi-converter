#!/usr/bin/env ruby
require 'rubygems'
require 'daemons'
require 'fileutils'
include FileUtils

def set_operating_environ
  #Build details on the gem installed and its location and version
  gem_searcher = Gem::GemPathSearcher.new
  @echi_converter_gem = gem_searcher.find('echi-converter')
  @echi_gem_loc = Gem::dir + '/gems/' + @echi_converter_gem.name + '-' + @echi_converter_gem.version.version
end

#Method for creating the project itself
def create_project dir_name
  if dir_name == nil
    puts 'You must specify a directory name, proper usage is:'
    puts 'echi-converter-create /path/to/my/directory'
    puts 'Exiting...'
    exit
  end

  #Assemble elements to create root directory
  dest_dir_relative = dir_name || Dir.pwd
  dest_dir = File.expand_path dest_dir_relative
  base_dir = File.expand_path File.dirname(__FILE__)

  begin
    echi_install_conf = YAML::load(File.open("#{@echi_gem_loc}/config/install_files.yml"))
    #Make root directory of project
    FileUtils.mkdir dest_dir
    #Create subdirectories
    echi_install_conf["dirs_to_create"].each do |dir|
      FileUtils.mkdir dir_name + '/' + dir["name"]
      puts 'Created directory: ' + dir_name + '/' + dir["name"]
    end
    #Copy files
    echi_install_conf["files_to_copy"].each do |file|
      FileUtils.cp "#{@echi_gem_loc}/#{file["name"]}", "#{dest_dir}/#{file["name"]}"
      puts 'Created file: ' + dir_name + '/' + file["name"]
    end
  rescue => err
    puts err
    puts 'Fatal...exiting...'
    exit
  end
  puts ''
  puts 'Successfully created project in directory ' + dest_dir
end

#Stub to allow the upgrade of the project
def upgrade_project project_name
  #Assemble elements to create root directory
  dest_dir_relative = project_name || Dir.pwd
  dest_dir = File.expand_path dest_dir_relative
  base_dir = File.expand_path File.dirname(__FILE__)
  
  begin 
    echi_install_conf = YAML::load(File.open("#{@echi_gem_loc}/config/install_files.yml"))
    #Copy files
    echi_install_conf["files_to_upgrade"].each do |file|
      FileUtils.cp "#{@echi_gem_loc}/#{file["name"]}", "#{dest_dir}/#{file["name"]}"
      puts 'Upgraded file: ' + project_name + '/' + file["name"]
    end
  rescue => err
    puts err
    exit
  end
  puts ''
  puts 'Successfully upgraded ' + project_name
end

#Used launch dynamically or as a deamon
def launch_project run_type, project_name
  
  #Set various file paths
  pid_directory = project_name + '/log'
  script_path = project_name + '/lib/main.rb'
  
  #Build options to run as a daemon
  options = {
    :app_name => 'echi-converter',
    :ARGV => [run_type],
    :ontop => false,
    :multiple => false,
    :backtrace => true,
    :monitor => true,
    :dir_mode => :normal,
    :dir => pid_directory,
    :script => ''
  }
  
  #If set, run interactively and not as a daemon
  if run_type == 'run'
    options["ontop"] = true
  end
  
  #Daemonize
  Daemons.run(script_path, options)
end

#We need to locate the echi-converter gem and set some variables
set_operating_environ
#Display initial banner of information
puts '[' + @echi_converter_gem.name + ' ' + @echi_converter_gem.version.version + ']'
puts @echi_converter_gem.summary
puts ''
puts @echi_converter_gem.homepage
puts ''

#Evaluate the selection and execute
if ARGV[0] == 'create'
  create_project ARGV[1]
elsif ARGV[0] == 'upgrade'
  upgrade_project ARGV[1]
elsif ARGV[0] == 'run' || ARGV[0] == 'start' || ARGV[0] == 'stop' || ARGV[0] == 'zap' || ARGV[0] == 'restart'
  launch_project ARGV[0], ARGV[1]
else
  usage = "Usage: 
    echi-converter create myproject - create the local project to run the ECHI converter from
    echi-converter upgrade myproject - location of project to upgrade after a new gem version is installed

    echi-converter run myproject - Run the ECHI converter interactively from the location given
    echi-converter start myproject - Start the ECHI converter in daemon mode from the location given
    echi-converter stop myproject - Stop the ECHI converter daemon
    echi-converter restart myproject - Restart the ECHI converter 
    echi-converter zap myproject - If there has been an unexpected close and the system still thinks the converter is running, clean up the pid files"
  puts usage
end
