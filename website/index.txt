h1. ECHI Converter

h1. &#x2192; 'echi-converter'


h2. The ECHI (External Call History Interface) Converter 

Provides a Ruby based utility for fetching Avaya CMS / ECHI files in binary form from an FTP server, converting them to ASCII and then inserting them into a database via ActiveRecord.

h2. Status

This is the beta release now in production use within Call Centers using Avaya CMS.  The utility successfully and reliably imports the data provided by the Avaya CMS ECHI into various databases, including Oracle and MySQL.  This provides the repository of call segments that may then be used to provide detailed Cradle to Grave reporting for the call center.


h2. Features

The utility provides the following capabilities:
	
	# Support of ActiveRecord (means you may use Oracle, MySQL, MS-SQL, Postgres, DB2, etc)
	# Generate your schema via ActiveRecord Migrations
	# Fetch Binary or ASCII CSV files from the Avaya CMS platform via FTP
	# Convert from the defined Binary format to ASCII
	# Insert the records into the defined database table
	# Change schema structure via YML configuration file to accommodate various releases of the ECHI format

# Table names:
## echi_records - stores all ECHI data        
## echi_logs - stores a log entry for each file processed


h2. Requirements

	# "Ruby v1.8.6+":http://www.ruby-lang.org/
	# "Rubygems v0.9.4+":http://www.rubygems.org/
	# "ActiveRecord v1.15.3+":http://activerecord.rubyforge.org/
	# "ActiveSupport v1.4.2+":http://activesupport.rubyforge.org/
	# "Daemons v1.0.7+":http://daemons.rubyforge.org/
	# "FasterCSV v1.2.0+":http://fastercsv.rubyforge.org/
	# "Rake v0.7.3+":http://rake.rubyforge.org/


h2. Installing

<pre syntax="ruby">sudo gem install echi-converter</pre>

or

<pre syntax="ruby">gem install echi-converter</pre>


h2. Setup

First, create the directory with all of the project files where you will run this application from:

<pre syntax="ruby">echi-converter create myproject</pre>

Once you have installed a project into your preferred directory, you then need to configure for your environment.  The first step is to modify each of these files:

	# config/application.yml
	## Change each of the 'echi' settings for connecting to your local FTP server where the CMS puts the ASCII/binary files
	## Select which schema you would like to use (ie - extended_version12.yml) based on what you have in place
	# config/database.yml
	## Change to match your local database and database login credentials, full ActiveRecord support

Once this is complete, then simply run these commands from the project directory:

	# rake migrate (creates the tables required for the system)
	# echi-converter (starts the server daemon, refer to its usage)


h2. Usage

# echi-converter create myproject - create the local project to run the ECHI converter from
# echi-converter upgrade myproject - location of project to upgrade after a new gem is installed

# echi-converter run myproject - Run the ECHI converter interactively from the location given
# echi-converter start myproject - Start the ECHI converter in daemon mode from the location given
# echi-converter stop myproject - Stop the ECHI converter daemon
# echi-converter restart myproject - Restart the ECHI converter 
# echi-converter zap myrpoject - If there has been an unexpected close and the system still thinks the converter is running, clean up the pid files


h2. Demonstration of usage

Start the daemon/service:

<pre syntax="ruby">echi-converter start myproject</pre>

Stop the daemon/service:

<pre syntax="ruby">echi-converter stop myproject</pre>


h2. ToDo

Items to be done to move this out of alpha stage:

# 'echi-converter create' works fine with OSX/Linux, need to test validate with a Win32 platform, therefore currently recommended to only run on a Linux/OSX platform, could use "VMWare":http://www.vmware.com to do this on Windows.


h2. Forum

"Google Groups - ECHI Converter":http://groups.google.com/group/echi-converter


h2. How to submit patches

Read the "8 steps for fixing other people's code":http://drnicwilliams.com/2007/06/01/8-steps-for-fixing-other-peoples-code/ and for section "8b: Submit patch to Google Groups":http://drnicwilliams.com/2007/06/01/8-steps-for-fixing-other-peoples-code/#8b-google-groups, use the Google Group above.

The trunk repository is <code>svn://rubyforge.org/var/svn/echi-converter/trunk</code> for anonymous access.

h2. License

This code is free to use under the terms of the LGPL license. 

h2. Contact

Comments are welcome. Send an email to "jason [at] goecke.net":mailto:jason@goecke.net.
